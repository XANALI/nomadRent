# Generated by Django 2.2.6 on 2019-11-28 12:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_year', models.IntegerField()),
                ('price_hourly', models.FloatField()),
                ('available', models.BooleanField()),
                ('rate', models.IntegerField(default=0)),
                ('add_equip_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ourApp.AdditionalEquipment')),
            ],
            options={
                'ordering': ['rate'],
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('power', models.FloatField(default=0)),
                ('consummation', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userImg', models.ImageField(default='NULL', upload_to='car_pictures/')),
            ],
        ),
        migrations.CreateModel(
            name='ModelOfCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='starting date')),
                ('end_date', models.DateTimeField(verbose_name='ending date')),
                ('approves', models.BooleanField()),
                ('finished', models.BooleanField()),
                ('canceled', models.BooleanField()),
                ('total_price', models.IntegerField(default=0)),
                ('rate', models.IntegerField(default=0)),
                ('car_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='ourApp.Car')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='engine_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ourApp.Engine'),
        ),
        migrations.AddField(
            model_name='car',
            name='fuel_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ourApp.FuelType'),
        ),
        migrations.AddField(
            model_name='car',
            name='model_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ourApp.ModelOfCar'),
        ),
        migrations.AddField(
            model_name='car',
            name='picture_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ourApp.Gallery'),
        ),
        migrations.CreateModel(
            name='SimpleUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateTimeField(blank=True, null=True, verbose_name='date of birth')),
                ('address', models.CharField(default='NULL', max_length=200)),
                ('userImg', models.ImageField(default='/default.jpg', upload_to='user_avas/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
